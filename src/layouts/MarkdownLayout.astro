---
import BaseLayout from "./BaseLayout.astro";

const { frontmatter } = Astro.props;
---

<BaseLayout
	title={frontmatter.title + " | blog.daniel-armenta.com"}
	padding={0}
	description={frontmatter.description}
>
	<img src={frontmatter.heroImage} transition:name={frontmatter.heroImage} />
	<img src={frontmatter.heroImage} class="invisible" />
	<div class="bg">
		<div class="content">
			<p class="published">Published {frontmatter.pubDate}</p>
			<h1>{frontmatter.title}</h1>
			<slot />
		</div>
	</div>

	<Fragment slot="head">
		<style lang="scss">
			html {
				scroll-behavior: smooth;
			}

			.bg {
				background-color: var(--background);
			}

			.content {
				width: clamp(200px, 90%, 800px);
				margin: 0px auto;
				padding: 1.5rem;

				:global(p) {
					text-align: justify;
				}

				:global(h1, h2, h3, h4, h5, h6) {
					color: var(--accent);
				}

				:global(table, tr, td, th) {
					border: 1px solid;
					padding: 0.5rem;
				}

				:global(table) {
					width: 80%;
					margin: 1rem auto;
					border-collapse: collapse;
				}

				:global(thead) {
					background-color: var(--primary);
				}

				:global(img) {
					width: 100%;
					border-radius: 1rem;
				}

				:global(pre) {
					padding: 1.5rem;
					margin: 1rem;
					border-radius: 0.5rem;
					font-size: medium;

					position: relative;

					:global(button.copy-button) {
						color: var(--code-color);
						font-family: monospace;
						border: none;
						padding: 0.25rem;
						border-radius: 0.25rem;

						position: absolute;
						top: 0px;
						right: 0px;

						z-index: 999;

						&:hover {
							background-color: rgba(255, 255, 255, 0.2);
						}
					}
				}

				:global(pre code) {
					overflow: auto;
					width: 100%;
					display: block;
					pad: 0.5rem;
				}

				:global(a) {
					color: var(--primary);
				}

				:global(blockquote) {
					border-left: 1px solid var(--primary);
					padding: 1.5rem;
					margin: 0.5px;
				}

				:global(li::marker) {
					color: var(--accent);
				}

				:global(.code-container) {
					margin: 1rem auto;

					:global(*) {
						background-color: var(--code-bg);
					}
					:global(pre) {
						margin: 0px;
						border-top-left-radius: 0px;
					}

					:global(p) {
						color: var(--code-color);

						width: min-content;
						min-width: 6rem;
						padding: 0.5rem;
						border-top-right-radius: 1rem;
						border-top-left-radius: 1rem;
						font-size: 1.5rem;
					}
				}

				:global(div.callout) {
					background-color: var(--primary);
					padding: 1rem;
					border-radius: 1rem;
					margin: 10px auto;
				}

				:global(div.callout)::before {
					content: attr(data-title);
					font-size: 1.2rem;
				}

				:global(div.callout:not([data-title]))::before {
					content: "Note:";
				}

				:global(div.callout.blue) {
					background-color: var(--callout-blue);
					color: #ddd;
				}

				:global(div.callout.red) {
					background-color: var(--callout-red);
				}

				:global(div.callout.green) {
					background-color: var(--callout-green);
					color: #202020;
				}

				:global(div.callout.cyan) {
					background-color: var(--callout-cyan);
					color: #202020;
				}

				:global(div.callout.primary) {
					background-color: var(--primary);
				}

				:global(div.callout.secondary) {
					background-color: var(--secondary);
				}

				:global(div.callout.accent) {
					background-color: var(--accent);
					color: #202020;
				}

				:global(button.file-download) {
					border: none;
					background-color: var(--secondary);
					color: var(--text);
					margin: 1rem auto;
					padding: 0.5rem;
					display: block;

					:global(p) {
						font-size: 0.75rem;
						text-align: center;
					}
					:global(span) {
						font-size: 3rem;
						margin: 0.25rem;
					}
				}
			}
			h1 {
				padding: 2rem;
			}

			img {
				width: 100%;
				position: fixed;
				z-index: -1;
			}

			img.invisible {
				position: unset;
				opacity: 0;
			}

			p.published {
				opacity: 0.6;
			}

			:global(div.heading-div) {
				display: flex;

				:global(a) {
					display: flex;
					opacity: 0;

					transition-property: opacity;

					:global(span) {
						color: var(--accent);
						text-decoration: none;
						font-size: 3rem;
						margin: auto;
					}
					&:hover {
						text-decoration: none;
					}
				}

				&:hover {
					:global(a) {
						opacity: 1;
					}
				}
			}

			@media screen and (max-width: 500px) {
				.content {
					:global(h1, h2, h3, h4, h5, h6) {
						margin: auto 0px;
					}

					:global(pre) {
						padding: 0.6rem;
					}

					:global(.code-container) {
						:global(p) {
							font-size: 1rem;
						}
					}

					::global(div.heading-div span) {
						font-size: 2rem;
					}
				}
			}
		</style>

		<script>
			const listenToCopyCode = () => {
				const codeBlocks = document.querySelectorAll("pre");
				for (const code of codeBlocks) {
					const btn = code.lastChild!;
					const content = code.children[0].textContent;
					btn.addEventListener("click", () => {
						navigator.clipboard.writeText(content || "").then(() => {
							btn.textContent = "Copied!";
							setTimeout(() => {
								btn.textContent = "Copy";
							}, 5000);
						});
					});
				}
			};
			listenToCopyCode();
			document.addEventListener("astro:after-swap", listenToCopyCode);
		</script>
		<script>
			const listenToFileDownload = () => {
				const fileDownloadButtons = document.querySelectorAll(".file-download");
				for (const button of fileDownloadButtons) {
					button.addEventListener("click", (e) => {
						const href = button.getAttribute("data-path");
						const download = button.lastChild?.textContent;
						if (href && download) {
							Object.assign(document.createElement("a"), {
								href,
								download
							}).click();
						}
					});
				}
			};
			listenToFileDownload();
			document.addEventListener("astro:after-swap", listenToFileDownload);
		</script>
	</Fragment>
</BaseLayout>
